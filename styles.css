body {
    margin: 0;
}

* {
    box-sizing: border-box;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif
}

.page {
    display: flex;
    flex-direction: column;
    width: 100vw;
    height: 100vh;
}

.header {
    background-color: lightblue;
    width: 100%;
    height: 10%;
}

.content {
    display: grid;
    height: 100%;
    width: 100%;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 8fr 1fr;
}

.library {
    grid-column: 1 / 4;
    grid-row: 1/2;
    border: 1px solid black;
    padding: 20px;
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    gap: 20px;
}



.library-book {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-evenly;
  text-align: center;
  border: 1px solid black;
  background-color: lightgreen;
  width: 300px;
  height: 250px;
}

.library-book > button {
  width: 80%;
  height: 40px;
  border: none;
}

.library-book > button:hover {
  background-color: lightseagreen;
}

.title, .author, .pageNo, .read, .delete {
  font-size: 20px;
  font-weight: bold;
}

.bottom {
    display: flex;
    grid-column: 3 / 4;
    grid-row: 2 / 3;
}

.open-button {
    background-color: #555;
    color: white;
    padding: 16px 20px;
    border: none;
    cursor: pointer;
    opacity: 0.8;
    position: fixed;
    bottom: 23px;
    right: 28px;
    width: 50px;
    border-radius: 103px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
  }


  /* The popup form - hidden by default */
/* .form-popup {
  display: none;
  position: fixed;
  bottom: 0;
  right: 15px;
  border: 3px solid #f1f1f1;
  z-index: 9;
} */

/* Add styles to the form container */
.form-container {
  max-width: 300px;
  padding: 10px;
  background-color: white;
}

/* Full-width input fields */
.form-container input[type=text], .form-container input[type=number] {
  width: 100%;
  padding: 15px;
  margin: 5px 0 22px 0;
  border: none;
  background: #f1f1f1;
}

/* When the inputs get focus, do something */
.form-container input[type=text]:focus, .form-container input[type=number]:focus {
  background-color: #ddd;
  outline: none;
}

/* Set a style for the submit/login button */
.form-container .btn {
  background-color: #04AA6D;
  color: white;
  padding: 16px 20px;
  border: none;
  cursor: pointer;
  width: 100%;
  margin-bottom:10px;
  opacity: 0.8;
}

/* Add a red background color to the cancel button */
.form-container .cancel {
  background-color: red;
}

/* Add some hover effects to buttons */
.form-container .btn:hover, .open-button:hover {
  opacity: 1;
}
/* The popup form - hidden by default */
.form-popup {
    display: block;
    /* position: fixed; */
    /* bottom: 0; */
    /* right: 15px; */
    border: 3px solid #f1f1f1;
}
  
/* Add styles to the form container */
.form-container {
max-width: 300px;
padding: 10px;
background-color: white;
}

/* Full-width input fields */
.form-container input[type=text], .form-container input[type=password], .form-container select {
width: 100%;
padding: 15px;
margin: 5px 0 22px 0;
border: none;
background: #f1f1f1;
}

/* When the inputs get focus, do something */
.form-container input[type=text]:focus, .form-container input[type=password]:focus{
background-color: #ddd;
outline: none;
}

/* Set a style for the submit/login button */
.form-container .btn {
background-color: #04AA6D;
color: white;
padding: 16px 20px;
border: none;
cursor: pointer;
width: 100%;
margin-bottom:10px;
opacity: 0.8;
}

/* Add a red background color to the cancel button */
.form-container .cancel {
background-color: red;
}

/* Add some hover effects to buttons */
.form-container .btn:hover, .open-button:hover {
opacity: 1;
}

.overlay {
    display: none;
    align-items: center;
    justify-content: center;
    position: fixed;
    top: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.394);
}

/* .dropdown-container .dropdown-button span::after {
    transition: transform .5s;
}
 
.dropdown-container.active .dropdown-button span::after {
    transform: rotate(45deg);
} */